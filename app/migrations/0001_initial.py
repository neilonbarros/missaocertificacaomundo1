# Generated by Django 4.2.3 on 2023-08-08 15:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationDepartments',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('department', models.CharField(default=None, error_messages={'unique': 'This department already exists'}, help_text='Minimum 5 characters', max_length=150, unique=True, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='department')),
            ],
            options={
                'db_table': 'app_departments',
                'ordering': ['department'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationJobPositions',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('jobposition', models.CharField(default=None, help_text='Minimum 5 characters', max_length=150, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='jobposition')),
                ('department', models.ForeignKey(default=None, help_text='Select', on_delete=django.db.models.deletion.CASCADE, to='app.applicationdepartments', verbose_name='department')),
            ],
            options={
                'db_table': 'app_jobpositions',
                'ordering': ['jobposition'],
                'unique_together': {('department', 'jobposition')},
            },
        ),
        migrations.CreateModel(
            name='ApplicationPermissions',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('permission', models.CharField(max_length=150)),
                ('jobposition', models.ForeignKey(default=None, help_text='Inform the permiss√£o', on_delete=django.db.models.deletion.CASCADE, to='app.applicationjobpositions', verbose_name='permission')),
            ],
            options={
                'db_table': 'app_permissions',
            },
        ),
        migrations.CreateModel(
            name='ApplicationPeoples',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.BooleanField(default=False, verbose_name='status')),
                ('cpf', models.CharField(error_messages={'unique': 'This cpf already exists'}, help_text='Only numbers', max_length=14, unique=True, verbose_name='cpf')),
                ('fullname', models.CharField(default=None, help_text='Minimum 5 characters', max_length=150, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='fullname')),
                ('department', models.ForeignKey(default=None, help_text='Inform the department', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.applicationdepartments', verbose_name='department')),
                ('jobposition', models.ForeignKey(default=None, help_text='Inform the job position', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.applicationjobpositions', verbose_name='job position')),
            ],
            options={
                'db_table': 'app_peoples',
                'ordering': ['fullname'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationPasswords',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('provisional', models.BooleanField(default=False, verbose_name='provisional')),
                ('salt', models.BinaryField()),
                ('hashed', models.BinaryField()),
                ('people', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.applicationpeoples')),
            ],
            options={
                'db_table': 'app_passwords',
            },
        ),
    ]
